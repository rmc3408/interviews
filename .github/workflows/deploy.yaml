name: CI

on:
  pull_request:
    branches: [develop, main]
  push:
    branches:
      - develop
      - main

jobs:
  building:
    runs-on: ubuntu-latest
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
    steps:
      - name: Getting file from github via checkout action
        uses: actions/checkout@v3
      - name: Cache file and node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-
      - name: selecting node version
        uses: actions/setup-node@v2
        with:
          node-version: '18.x'
      - name: Install dependencies via NPM
        run: npm ci
      - name: Check formating via prettier
        run: npm run format:check
      - name: Check Jest testing
        env:
          CI: true
        run: npm run test
      - name: Upload Coverage test
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage
          path: coverage
      - name: Install Vercel CLI
        if: github.event_name == 'push'
        run: npm install --global vercel@latest
      - name: Pull Vercel Environment Information
        if: github.event_name == 'push'
        run: vercel pull --yes --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        if: github.event_name == 'push'
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
      - name: Upload Build files
        if: github.event_name == 'push'
        uses: actions/upload-artifact@v3
        with:
          name: code-built
          path: build
      - name: Zip all Build and Coverage files
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          zip -r build.zip ./build
          zip -r coverage.zip ./coverage
      - name: Create a versioning by semantic
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Deploy Project Artifacts to Staging
        if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Production
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: vercel deploy --prod --token=${{ secrets.VERCEL_TOKEN }}